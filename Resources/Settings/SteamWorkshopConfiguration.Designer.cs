//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources.Settings {
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, formatting them, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilderEx class via the ResXFileCodeGeneratorEx custom tool. (with TCAdmin modifications)
    // To add or remove a member, edit your .ResX file then rerun the ResXFileCodeGeneratorEx custom tool or rebuild your VS.NET project.
    // Copyright (c) Dmytro Kryvko 2006-2023 (http://dmytro.kryvko.googlepages.com/)
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("DMKSoftware.CodeGenerators.Tools.StronglyTypedResourceBuilderEx", "2.6.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
#if !SILVERLIGHT
    [global::System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=true)]
#endif
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
    public partial class SteamWorkshopConfiguration {
        
        private static string _fullClassName = "TCAdminCustomMods.Resources.Settings.Resources.Settings.SteamWorkshopConfiguratio" +
            "n";
        
        private static global::System.Resources.ResourceManager _resourceManager;
        
        private static object _internalSyncObject;
        
        private static global::System.Globalization.CultureInfo _resourceCulture = System.Globalization.CultureInfo.InvariantCulture;
        
        /// <summary>
        /// Initializes a SteamWorkshopConfiguration object.
        /// </summary>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public SteamWorkshopConfiguration() {
        }
        
        /// <summary>
        /// Thread safe lock object used by this class.
        /// </summary>
        public static object InternalSyncObject {
            get {
                if (object.ReferenceEquals(_internalSyncObject, null)) {
                    global::System.Threading.Interlocked.CompareExchange(ref _internalSyncObject, new object(), null);
                }
                return _internalSyncObject;
            }
        }
        
        /// <summary>
        /// Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(_resourceManager, null)) {
                    global::System.Threading.Monitor.Enter(InternalSyncObject);
                    try {
                        if (object.ReferenceEquals(_resourceManager, null)) {
                            global::System.Threading.Interlocked.Exchange(ref _resourceManager, new global::System.Resources.ResourceManager("TCAdminCustomMods.Resources.Settings.SteamWorkshopConfiguration", typeof(SteamWorkshopConfiguration).Assembly));
                        }
                    }
                    finally {
                        global::System.Threading.Monitor.Exit(InternalSyncObject);
                    }
                }
                return _resourceManager;
            }
        }
        
        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return _resourceCulture;
            }
            set {
                _resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Show Author &amp; Rating'.
        /// </summary>
        public static string ShowAuthorAndRating {
            get {
                string translated_text = TCAdmin.SDK.Language.LanguageManager.GetTranslatedText(System.Reflection.Assembly.GetExecutingAssembly().FullName, _fullClassName, "ShowAuthorAndRating", System.Globalization.CultureInfo.CurrentCulture);
                if (object.ReferenceEquals(translated_text, null)) {
                    return ResourceManager.GetString(ResourceNames.ShowAuthorAndRating, _resourceCulture);
                }
                else {
                    return translated_text;
                }
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Show Description'.
        /// </summary>
        public static string ShowDescription {
            get {
                string translated_text = TCAdmin.SDK.Language.LanguageManager.GetTranslatedText(System.Reflection.Assembly.GetExecutingAssembly().FullName, _fullClassName, "ShowDescription", System.Globalization.CultureInfo.CurrentCulture);
                if (object.ReferenceEquals(translated_text, null)) {
                    return ResourceManager.GetString(ResourceNames.ShowDescription, _resourceCulture);
                }
                else {
                    return translated_text;
                }
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Steam Workshop Settings'.
        /// </summary>
        public static string SteamWorkshopSettings {
            get {
                string translated_text = TCAdmin.SDK.Language.LanguageManager.GetTranslatedText(System.Reflection.Assembly.GetExecutingAssembly().FullName, _fullClassName, "SteamWorkshopSettings", System.Globalization.CultureInfo.CurrentCulture);
                if (object.ReferenceEquals(translated_text, null)) {
                    return ResourceManager.GetString(ResourceNames.SteamWorkshopSettings, _resourceCulture);
                }
                else {
                    return translated_text;
                }
            }
        }
        
        /// <summary>
        /// Lists all the resource names as constant string fields.
        /// </summary>
        public class ResourceNames {
            
            /// <summary>
            /// Stores the resource name 'ShowAuthorAndRating'.
            /// </summary>
            public const string ShowAuthorAndRating = "ShowAuthorAndRating";
            
            /// <summary>
            /// Stores the resource name 'ShowDescription'.
            /// </summary>
            public const string ShowDescription = "ShowDescription";
            
            /// <summary>
            /// Stores the resource name 'SteamWorkshopSettings'.
            /// </summary>
            public const string SteamWorkshopSettings = "SteamWorkshopSettings";
        }
    }
}
